{"version":3,"file":"Site.js","sourceRoot":"","sources":["../../src/structures/Site.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAKH;;GAEG;AACH,MAAqB,IAAI;IACvB,iFAAiF;IAC1E,MAAM,CAAQ;IACrB,6CAA6C;IACtC,IAAI,CAAQ;IACnB,+BAA+B;IACxB,OAAO,CAAU;IACxB,4CAA4C;IACrC,IAAI,CAAS;IACpB,kDAAkD;IAC3C,GAAG,CAAS;IACnB,kDAAkD;IAC3C,QAAQ,CAAQ;IACvB;;;OAGG;IACI,MAAM,CAAkB;IAC/B,mCAAmC;IAC5B,QAAQ,CAAQ;IACvB,qEAAqE;IAC9D,OAAO,CAAQ;IACtB,yCAAyC;IAClC,QAAQ,CAAS;IACxB,oDAAoD;IAC7C,WAAW,CAAU;IAE5B,YAAY,IAAc;QACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,MAAM,CAAA;QAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,CAAA;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;QACrB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,CAAA;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAA;QACvC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,KAAK,CAAA;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAA;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,GAAG,CAAA;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAA;QACtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,CAAA;IAC3C,CAAC;CACF;AAxCD,uBAwCC","sourcesContent":["/**\n * @packageDocumentation\n * @module Structures\n */\n\nimport type SiteApi from './SiteApi'\nimport type SiteInfo from './SiteInfo'\n\n/**\n * Represents a site, mostly used for JSDoc\n */\nexport default class Site {\n  /** The domain of the Site (the \"google.com\" part of \"https://google.com/foo\") */\n  public domain: string\n  /** The type of this site (json/xml/derpi) */\n  public type: string\n  /** The aliases of this site */\n  public aliases: string[]\n  /** If this site serves NSFW posts or not */\n  public nsfw: boolean\n  /** An object representing the api of this site */\n  public api: SiteApi\n  /** The url query param to paginate on the site */\n  public paginate: string\n  /**\n   * If the site supports `order:random`.\n   * If a string, this means a custom random system is used :/\n   */\n  public random: boolean | string\n  /** The url query param for tags */\n  public tagQuery: string\n  /** The character to use to join tags when creating the search url */\n  public tagJoin: string\n  /** If this site supports only http:// */\n  public insecure: boolean\n  /** Tags to add to every request, if not included */\n  public defaultTags: string[]\n\n  constructor(data: SiteInfo) {\n    this.domain = data.domain\n    this.type = data.type ?? 'json'\n    this.aliases = data.aliases ?? []\n    this.nsfw = data.nsfw\n    this.api = data.api ?? {}\n    this.paginate = data.paginate ?? 'page'\n    this.random = data.random ?? false\n    this.tagQuery = data.tagQuery ?? 'tags'\n    this.tagJoin = data.tagJoin ?? '+'\n    this.insecure = data.insecure ?? false\n    this.defaultTags = data.defaultTags ?? []\n  }\n}\n"]}